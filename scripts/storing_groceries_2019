#!/usr/bin/env python

import rospy
import smach
import smach_ros
from hsrb_interface import Robot, exceptions

from groceries import common
from groceries.common import manipulation
from groceries.groceries import states

def main():
    rospy.loginfo('Getting robot resources')
    robot = None
    while not rospy.is_shutdown():
        try:
            robot = Robot()
            tts = robot.try_get('default_tts')
            whole_body = robot.try_get('whole_body')
            gripper = robot.try_get('gripper')
            break
        except (exceptions.ResourceNotFoundError, exceptions.RobotConnectionError) as e:
            rospy.logerr_throttle(1, 'Failed to obtain resource: {}\nRetrying...'.format(e))

    pick_and_place_sm = smach.StateMachine(["succeeded", "aborted"],input_keys=['object_location'],
                                               output_keys=['object_location'])  
    with pick_and_place_sm:
        smach.StateMachine.add('MOVE_TO_TABLE',
                states.MoveToTable(robot),
                transitions={
                    'succeeded': 'SELECT_OBJECT'
                }
                ) # TODO add failure case

        smach.StateMachine.add('SELECT_OBJECT',
                states.SelectObject(robot),
                transitions={
                    'succeeded': 'PICK_OBJECT',
                    'aborted': 'SELECT_OBJECT'
                }
                )

        smach.StateMachine.add('PICK_OBJECT', 
               manipulation.PickObject(robot),
               transitions = {
                   'succeeded': 'MOVE_TO_SHELF',
                   'aborted': 'MOVE_TO_TABLE',
                   'preempted': 'PICK_OBJECT'
                   })
        smach.StateMachine.add('MOVE_TO_SHELF',
                states.MoveToShelf(robot),
                transitions={
                    'succeeded': 'PLACE_OBJECT'
                }
                )
        smach.StateMachine.add('PLACE_OBJECT',
                manipulation.PlaceObject(robot),
                transitions = {
                    'succeeded': 'MOVE_TO_TABLE',
                    'aborted': 'MOVE_TO_TABLE',
                    'preempted' : 'PLACE_OBJECT'
                }
                )

    rospy.loginfo('Beginning groceries SM')

    sis = smach_ros.IntrospectionServer('groceries_sm', pick_and_place_sm, '/groceries')
    sis.start()

    outcome = pick_and_place_sm.execute()


if __name__ == '__main__':
    main()
